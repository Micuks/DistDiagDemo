apiVersion: batch/v1
kind: Job
metadata:
  name: dependencies-installer
  namespace: oceanbase
spec:
  template:
    spec:
      serviceAccountName: tsar-admin
      containers:
      - name: deps-installer
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Get all OceanBase pods and install dependencies in parallel
          for pod in $(kubectl get pods -n oceanbase -l ref-obcluster=obcluster -o name); do
            echo "Starting dependencies installation in pod ${pod}..."
            kubectl exec -n oceanbase ${pod} -c observer -- sh -c '
              # Install or update required packages first
              echo "Installing/updating required packages..."
              # Check last update time
              if [ "$(find /var/cache/yum -mtime -30 2>/dev/null | wc -l)" -eq 0 ]; then
                echo "System not updated in last month, updating..."
                yum update -y
              else
                echo "System was updated recently, skipping update"
              fi && \
              # Check and install required packages if not present
              for pkg in git gcc make pcre-devel util-linux zip perf fuse-libs stress-ng iptables iproute; do
                if ! rpm -q $pkg >/dev/null 2>&1; then
                  echo "Installing $pkg..."
                  yum install -y $pkg
                else
                  echo "$pkg is already installed"
                fi
              done && \
              echo "Finished dependency check in ${pod}" # Optional confirmation
            ' # Added closing quote for sh -c
          done
          # Removed wait as kubectl exec calls are sequential in the loop
          echo "Dependencies installation loop completed!"
      restartPolicy: Never
  backoffLimit: 4 