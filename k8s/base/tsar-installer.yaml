apiVersion: batch/v1
kind: Job
metadata:
  name: tsar-installer
  namespace: oceanbase
spec:
  template:
    spec:
      serviceAccountName: tsar-admin
      containers:
      - name: installer
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Get all OceanBase pods and install tsar in parallel
          for pod in $(kubectl get pods -n oceanbase -l ref-obcluster=obcluster -o name); do
            echo "Starting tsar installation in pod ${pod}..."
            kubectl exec -n oceanbase ${pod} -c observer -- sh -c '
              yum update -y && \
              yum install -y git gcc make pcre-devel && \
              cd /tmp && \
              rm -rf tsar && \
              # Try git clone with retries
              max_retries=5
              retry_count=0
              while [ $retry_count -lt $max_retries ]; do
                if git clone https://github.com/alibaba/tsar.git; then
                  echo "Git clone successful"
                  break
                else
                  retry_count=$((retry_count + 1))
                  if [ $retry_count -eq $max_retries ]; then
                    echo "Failed to clone after $max_retries attempts"
                    exit 1
                  fi
                  echo "Git clone failed, retrying in 5 seconds (attempt $retry_count of $max_retries)..."
                  sleep 5
                fi
              done && \
              cd tsar && \
              make && \
              make install && \
              chmod -R 755 /usr/local/bin/tsar /usr/local/tsar /etc/tsar
            ' &
          done
          # Wait for all background processes to complete
          wait
          echo "All tsar installations completed!"
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tsar-admin
  namespace: oceanbase
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tsar-admin
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: [""]
  resources: ["pods/exec", "pods/portforward"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tsar-admin
subjects:
- kind: ServiceAccount
  name: tsar-admin
  namespace: oceanbase
roleRef:
  kind: ClusterRole
  name: tsar-admin
  apiGroup: rbac.authorization.k8s.io 